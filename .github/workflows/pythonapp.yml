name: Python application

on: [push, pull_request]
env:
  FFMPEG_VERSION: 4.2.1
  SDL_VERSION: 2.0.10
  SDL_MIXER_VERSION: 2.0.4
  USE_SDL2_MIXER: 1
  FF_BUILD_DIR: ~/ff_deps
  SDL_ROOT: ~/ff_deps/SDL2
  FFMPEG_ROOT: ~/ff_deps/ffmpeg
  OSX_PYVERS: 3.6.8 3.7.5 3.8.0

jobs:
  windows_wheels_tests:
    runs-on: windows-latest
    strategy:
      matrix:
        python: [ '3.6', '3.7', '3.8' ]
        arch: ['x64', 'x86']
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.arch }}
    - name: Get dependencies
      env:
        FF_ARCH: ${{ matrix.arch }}
      run: |
        if ("${{ matrix.arch }}" -eq "x64") {
          $env:BITTNESS = 64
        } else {
          $env:BITTNESS = 32
        }

        mkdir "$env:FF_BUILD_DIR"
        cd "$env:FF_BUILD_DIR"

        Invoke-WebRequest "http://ffmpeg.zeranoe.com/builds/win$env:BITTNESS/shared/ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-shared.zip" -OutFile "shared.zip"
        Invoke-WebRequest "http://ffmpeg.zeranoe.com/builds/win$env:BITTNESS/dev/ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev.zip" -OutFile "dev.zip"
        7z x "shared.zip"
        ren "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-shared" "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev"
        7z x "dev.zip" -y
        ren "ffmpeg-$env:FFMPEG_VERSION-win$env:BITTNESS-dev" ffmpeg

        Invoke-WebRequest "https://www.libsdl.org/release/SDL2-devel-$env:SDL_VERSION-VC.zip" -OutFile "SDL2-devel-$env:SDL_VERSION-VC.zip"
        7z x "SDL2-devel-$env:SDL_VERSION-VC.zip"
        ren "SDL2-$env:SDL_VERSION" SDL2
        Invoke-WebRequest "https://www.libsdl.org/projects/SDL_mixer/release/SDL2_mixer-devel-$env:SDL_MIXER_VERSION-VC.zip" -OutFile "SDL2_mixer-devel-$env:SDL_MIXER_VERSION-VC.zip"
        7z x "SDL2_mixer-devel-$env:SDL_MIXER_VERSION-VC.zip"

        mkdir "SDL2\bin"
        mkdir "SDL2\include\SDL2"

        Copy-Item "SDL2\COPYING.txt" -destination "SDL2\bin"
        Copy-Item "SDL2\README-SDL.txt" -destination "SDL2\bin"

        Copy-Item "SDL2\lib\$env:FF_ARCH\*.dll" -destination "SDL2\bin" -Recurse -Force
        Copy-Item "SDL2\lib\$env:FF_ARCH\*.lib" -destination "SDL2\lib" -Recurse -Force

        Copy-Item "SDL2_mixer-$env:SDL_MIXER_VERSION\lib\$env:FF_ARCH\*.dll" -destination "SDL2\bin" -Recurse -Force
        Copy-Item "SDL2_mixer-$env:SDL_MIXER_VERSION\lib\$env:FF_ARCH\*.lib" -destination "SDL2\lib" -Recurse -Force
        Copy-Item "SDL2_mixer-$env:SDL_MIXER_VERSION\include\*" -destination "SDL2\include" -Recurse -Force

        Copy-Item "SDL2\include\*.h" -destination "SDL2\include\SDL2" -Recurse -Force

        echo "Dependency paths are:"
        ls $env:SDL_ROOT
        ls $env:FFMPEG_ROOT
    - name: Make sdist
      if: matrix.arch == 'x64' && matrix.python == '3.7'
      run: |
        python -m pip install --upgrade pip virtualenv wheel setuptools
        python setup.py sdist
    - name: Install pip deps
      run: |
        python -m pip install --upgrade pip virtualenv wheel setuptools cython pytest
    - name: Make wheel
      run: |
        $env:SDL_ROOT=(get-item $env:SDL_ROOT).FullName
        $env:FFMPEG_ROOT=(get-item $env:FFMPEG_ROOT).FullName
        python setup.py bdist_wheel
    - name: Upload wheel
      uses: actions/upload-artifact@master
      with:
        name: py_wheel
        path: dist
    - name: Test
      run: |
        # see https://social.msdn.microsoft.com/Forums/security/en-US/0c13bd1a-388f-48cf-a190-7259d39a080f/ffmpeg-doesnt-work-from-inside-a-container-but-works-on-the-host?forum=windowscontainers
        # https://trac.ffmpeg.org/ticket/6875, https://stackoverflow.com/questions/46147012/opencv-import-failed-in-windows-container-on-windows-server-2016
        # and https://social.msdn.microsoft.com/Forums/en-US/a95032d2-c469-494a-b3f9-521b1389a6c9/cant-use-opencvpython-package-in-windows-container-windows-server-2016-standard?forum=windowscontainers
        # for the reason we need to manually copy some missing dlls to the PATH
        Invoke-WebRequest  "https://github.com/matham/ffpyplayer/releases/download/v4.1.0/ffmpeg_win_dll_container_deps.zip"  -OutFile "ffmpeg_win_dll_container_deps.zip"
        7z x "ffmpeg_win_dll_container_deps.zip"
        $env:PATH="$env:PATH;$env:GITHUB_WORKSPACE\ffmpeg_win_dll_container_deps\${{ matrix.arch }}"
        ls "$env:GITHUB_WORKSPACE\ffmpeg_win_dll_container_deps\${{ matrix.arch }}"

        $dist_path=(get-item dist).FullName
        $root=(get-item .).FullName
        $env:FFPYPLAYER_TEST_DIRS="$root\ffpyplayer\tests;$root\examples"
        cd ~/

        python -m pip install --no-index --find-links=$dist_path ffpyplayer
        $name = python -c "import ffpyplayer, os.path;print(os.path.dirname(ffpyplayer.__file__))"
        echo $name
        # powershell interprets writing to stderr as an error, so only raise error if the return code is none-zero
        try {
          pytest "$name\tests"
        } catch {
          if ($LastExitCode -ne 0) {
            throw $_
          } else {
            echo $_
          }
        }

  linux_test:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - name: Install
        run: |
          sudo apt install ffmpeg libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev
          sudo apt install libavutil-dev libswscale-dev libswresample-dev libpostproc-dev libsdl2-dev libsdl2-2.0-0
          sudo apt install libsdl2-mixer-2.0-0 libsdl2-mixer-dev python3-dev

          python -m pip install --upgrade pip virtualenv wheel setuptools cython pytest
          python -m pip install -e .
      - name: Test
        run: |
          pytest ffpyplayer/tests

  linux_wheels:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - name: Build docker
        run: |
          docker info
          docker pull quay.io/pypa/manylinux2010_x86_64
          mkdir dist

          docker run --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /io/.ci/build-wheels.sh
      - name: Upload wheel
        uses: actions/upload-artifact@master
        with:
          name: py_wheel
          path: dist
      - name: Test
        run: |
          root=`pwd`
          dist_path=$root/dist
          export FFPYPLAYER_TEST_DIRS="$root/ffpyplayer/tests:$root/examples"
          cd ~/

          python -m pip install --upgrade pip virtualenv wheel setuptools pytest
          python -m pip install --no-index --find-links=$dist_path ffpyplayer
          name=`python -c "import ffpyplayer, os.path;print(os.path.dirname(ffpyplayer.__file__))"`
          echo $name
          pytest "$name/tests"

  osx_wheels:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Brew setup
        run: |
          brew update
          brew install pkg-config
          brew install sdl2
          brew install sdl2_mixer
          brew install ffmpeg
          pkg-config --libs --cflags libavcodec
      - name: Building wheels
        run: |
          mkdir ~/ffpyplayer_wheels

          for pyver in $OSX_PYVERS; do
             git reset --hard
             git clean -d -x -f
             pyver_short=${pyver:0:3}

             curl -O -L https://www.python.org/ftp/python/$pyver/python-$pyver-macosx10.9.pkg
             sudo installer -package python-$pyver-macosx10.9.pkg -target /
             curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
             python$pyver_short get-pip.py --user
             python$pyver_short -m pip install --upgrade --user pip
             python$pyver_short -m pip install --upgrade --user cython pytest wheel
             python$pyver_short -m pip install --upgrade delocate

             python$pyver_short setup.py bdist_wheel

             /Library/Frameworks/Python.framework/Versions/$pyver_short/bin/delocate-wheel dist/*.whl
             /Library/Frameworks/Python.framework/Versions/$pyver_short/bin/delocate-addplat --rm-orig -x 10_9 -x 10_10 dist/*.whl
             cp dist/*.whl ~/ffpyplayer_wheels
          done

          git reset --hard
          git clean -d -x -f
          cp -r ~/ffpyplayer_wheels dist
      - name: Upload wheel
        uses: actions/upload-artifact@master
        with:
          name: py_wheel
          path: dist
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - name: Test
        run: |
          root=`pwd`
          export FFPYPLAYER_TEST_DIRS="$root/ffpyplayer/tests:$root/examples"
          cd ~/

          python -m pip install --upgrade pip virtualenv wheel setuptools pytest
          python -m pip install --no-index --find-links=~/ffpyplayer_wheels ffpyplayer
          name=`python -c "import ffpyplayer, os.path;print(os.path.dirname(ffpyplayer.__file__))"`
          echo $name
          pytest "$name/tests"

  docs:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.x
        uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - name: Install
        run: |
          sudo apt install ffmpeg libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev
          sudo apt install libavutil-dev libswscale-dev libswresample-dev libpostproc-dev libsdl2-dev libsdl2-2.0-0
          sudo apt install libsdl2-mixer-2.0-0 libsdl2-mixer-dev python3-dev

          python -m pip install --upgrade pip virtualenv wheel setuptools sphinx sphinx_rtd_theme
          python -m pip install -e .
      - name: Generate docs
        run: |
          cd doc
          make html
      - name: gh-pages upload
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp -r doc/build/html ~/docs_temp

          git config --global user.email "moiein2000@gmail.com"
          git config --global user.name "Matthew Einhorn"
          git remote rm origin || true
          git remote add origin "https://x-access-token:${GITHUB_TOKEN}@github.com/matham/ffpyplayer.git"

          git checkout --orphan gh-pages
          cp -r .git ~/docs_git
          cd ..
          rm -rf ffpyplayer
          mkdir ffpyplayer
          cd ffpyplayer
          cp -r ~/docs_git .git
          cp -r ~/docs_temp/* .
          touch .nojekyll

          git add .
          git commit -a -m "Docs for git-$GITHUB_SHA"
          git push origin gh-pages -f
