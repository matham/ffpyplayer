language: python

matrix:
  fast_finish: true
  include:
    - language: python
      python: 3.5
      os: linux
      dist: trusty
    - language: python
      python: 3.5
      os: linux
      dist: trusty
      env: TEST_CONDA=1
    - language: generic
      env: PY=3
      os: osx
      env: PYVERS="3.5.4 3.6.5 3.7.0"
    - language: generic
      env: PY=3
      os: osx
      env: TEST_CONDA=1
    - sudo: required
      services:
        - docker
      env: DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64

install:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ "${DOCKER_IMAGE}" == "" ] && [ "${TEST_CONDA}" != "1" ]; then
      sudo apt-get update;
      sudo apt-get -y install libegl1-mesa-dev libgles2-mesa-dev;
      sudo apt-get -y install libsdl2-dev libsdl2-mixer-dev python-dev;
      mkdir ~/ffmpeg_sources;
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/ffmpeg_build/lib;

      sudo apt-get -y install yasm;
      cd ~/ffmpeg_sources;
      wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz;
      tar xzf yasm-1.3.0.tar.gz;
      cd yasm-1.3.0;
      ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/ffmpeg_build/bin";
      make;
      make install;
      make distclean;

      sudo apt-get -y install nasm;
      cd /home/cpl/python/ffmpeg_sources;
      wget http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.xz;
      tar xf nasm-2.13.01.tar.xz;
      cd nasm-2.13.01;
      ./configure --prefix="/home/cpl/python/ffmpeg_build" --bindir="/home/cpl/python/ffmpeg_build/bin";
      make;
      make install;
      make distclean;

      sudo apt-get -y install libx264-dev;
      cd ~/ffmpeg_sources;
      wget http://download.videolan.org/pub/x264/snapshots/last_x264.tar.bz2;
      tar xjf last_x264.tar.bz2;
      cd x264-snapshot*;
      PATH="$HOME/ffmpeg_build/bin:$PATH" ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/ffmpeg_build/bin" --enable-shared --extra-cflags="-fPIC";
      PATH="$HOME/ffmpeg_build/bin:$PATH" make;
      make install;
      make distclean;

      sudo apt-get -y install libmp3lame-dev;
      sudo apt-get -y install nasm;
      cd ~/ffmpeg_sources;
      wget http://downloads.sourceforge.net/project/lame/lame/3.99/lame-3.99.5.tar.gz;
      tar xzf lame-3.99.5.tar.gz;
      cd lame-3.99.5;
      ./configure --prefix="$HOME/ffmpeg_build" --enable-nasm --enable-shared;
      make;
      make install;
      make distclean;

      sudo apt-get -y install libass-dev libfreetype6-dev libtheora-dev libvorbis-dev;
      cd ~/ffmpeg_sources;
      wget http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2;
      tar xjf ffmpeg-snapshot.tar.bz2;
      cd ffmpeg;
      PATH="$HOME/ffmpeg_build/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --prefix="$HOME/ffmpeg_build" --extra-cflags="-I$HOME/ffmpeg_build/include -fPIC" --extra-ldflags="-L$HOME/ffmpeg_build/lib" --bindir="$HOME/ffmpeg_build/bin" --enable-gpl --enable-libass --enable-libfreetype --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libx264 --enable-shared;
      PATH="$HOME/ffmpeg_build/bin:$PATH" make;
      make install;
      make distclean;
      hash -r;

      pip install --upgrade cython nose;
    fi;
  - if [ "${TRAVIS_OS_NAME}" == "osx" ] && [ "${TEST_CONDA}" != "1" ]; then
      brew update;
      brew install sdl2;
      brew install sdl2_mixer;
      travis_wait 30 brew install ffmpeg;
    fi;
  - if [ "${TEST_CONDA}" == "1" ]; then
      if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
        wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
        chmod +x miniconda.sh;
        ./miniconda.sh -b -p ~/anaconda;
        export PATH=~/anaconda/bin:$PATH;
      else
        curl -L https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh > ~/miniconda.sh;
        bash ~/miniconda.sh -b -p ~/miniconda;
        export PATH="~/miniconda/bin:$PATH";
      fi;
      echo "Check install";
      ls $HOME;
      ls $HOME/ffpy_miniconda;
      ls $HOME/ffpy_miniconda/bin;
      ls /;

      conda config --add channels conda-forge;
      conda update --yes --quiet conda;
      conda create -n testenv --yes --quiet pip python=3;
      source activate testenv;
      conda install --yes --quiet nose cython sdl2 sdl2_mixer ffmpeg pkg-config;
    fi;

before_script:
    cd "$TRAVIS_BUILD_DIR";
    export PYTHONPATH=$PYTHONPATH:$(pwd);
    export USE_SDL2_MIXER=1;

script:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ] && [ "${DOCKER_IMAGE}" == "" ] && [ "${TEST_CONDA}" != "1" ]; then
        PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" make;
        make test;
    fi;
  - if [ "${TEST_CONDA}" == "1" ]; then
        make;
        make test;
    fi;
  - if [ "${TRAVIS_OS_NAME}" == "osx" ] && [ "${TEST_CONDA}" != "1" ]; then
       mkdir ../wheelhouse;

       for pyver in $PYVERS; do
         git reset --hard;
         git clean -d -x -f;
         pyver_short=${pyver:0:3};

         curl -O -L https://www.python.org/ftp/python/$pyver/python-$pyver-macosx10.6.pkg;
         sudo installer -package python-$pyver-macosx10.6.pkg -target /;
         curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py;
         python$pyver_short get-pip.py --user;
         python$pyver_short -m pip install --upgrade --user pip;
         python$pyver_short -m pip install --upgrade --user cython nose wheel;
         python$pyver_short -m pip install --upgrade delocate;

         python$pyver_short setup.py build_ext --inplace;
         python$pyver_short setup.py bdist_wheel;
         python3 -m nose.core ffpyplayer/tests;

         /Library/Frameworks/Python.framework/Versions/$pyver_short/bin/delocate-wheel dist/*.whl;
         /Library/Frameworks/Python.framework/Versions/$pyver_short/bin/delocate-addplat --rm-orig -x 10_9 -x 10_10 dist/*.whl;
         cp dist/*.whl ../wheelhouse/;
       done;

       mkdir upload;
       tar -czvf upload/ffpyplayer-osx-wheels-$(date +%s)$PRE_CMD.tar.gz $(find ../wheelhouse/ -type f -name '*.whl');
       ls ../wheelhouse/;
       ls upload;
    fi;
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then
      unset DOCKER_IMAGE;
    fi
  - if [ "${DOCKER_IMAGE}" != "" ]; then
      mkdir wheelhouse;
      mkdir upload;

      docker run --rm -v `pwd`:/io $DOCKER_IMAGE $PRE_CMD /io/.travis/build-wheels.sh;
      tar -czvf upload/ffpyplayer-wheels-$(date +%s)$PRE_CMD.tar.gz $(find wheelhouse/ -type f -name '*manylinux*');
      ls wheelhouse/;
      ls upload;
    fi;
  - if (([ "${TRAVIS_OS_NAME}" == "osx" ] && [ "${TEST_CONDA}" != "1" ]) || [ "${DOCKER_IMAGE}" != "" ]) && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      export UPLOAD_WHEELS=1;
    fi;
deploy:
  - provider: s3
    access_key_id:
      secure: "U0Mt95UGtagb1g0Fo1PN+XbXhoBQSM6RINn9c5oS8etIMUW0j/Xyr/GSHLkACWZVzCGnSGkJuCc0VLi8S1vXvSrRI5XhwEcd0kSqaPtWAafLdQZ/eCd+xCFGLBdsQnF9M5cZHQoYYuR20bJrgbd35/+lcRqJwA3eJ0/uH8rXZuFaxsEZpDLyvbBMkynSr7lD/bW+2kpcegYe04Ksc/PCU8izxdly10LL7HzAzaVsHjWHBJkh75xCsL0JT82jmepr9KWAf04e01gIy/mCOQGlDkrS+H1Hz5E46E+emzV7shWGkIqHIejXz3stCWpXqHlynfDXx0pQKiIw6Lla7EB0ZmcatJxKoRRS4nrJ5r8e2vhT7YmNcxNm/02tA8hlgSaA0PqR1yHZVqSFrJNQ1PIR22GmWAKEcEN31mb7V3DutqblNFgIEkg70Q1uFx7ZwS09LPjL8Yt62UCoUDRI6+kJbCo9/hgu2CM2Trnz7G38qdXeYg8YJkmNYDYkDqcxeUQlhvV5Rzv/bLsrv0AQUwPDjDDpjndJjuAh/VFl8n/g1sQbZJrM+Wqxvg0Nwh+LTUvCOnM2c7GIf7Yzu1HiDrSsb29r3kTe3VCDnU/ZYpeoF+8ema3NLoikECC/QjinvaOVwv5BOrtKWGw68URKs+GJ0UWq4tCiRk4UbKJ9zYzU43s="
    secret_access_key:
      secure: "pHv12lGUbPNn1DVwZb/MjeyvTeP4Q5YsItUYwUdjVGYghtNrAEiORROmVARywg5P99kcFhfFzsmC56CCvaUzahHFdenzHKnPaJNQmUvokBMPt4Avo7X7Va/oUjqis4UqvmOGz7Cn3KkOCL06hBdkCEWfQ/nMGFb/IhMKfpfCQdTKXrB1TjMoQjbSoBoJ1Sdf67mmKxbGGXKkgA1xPU0mm61kmKzm+lZ0b4BwSZQjlqN0S6Cj7UPH43X8qDqsbDHCgQX9osdhnjkU5V0MJaawEPxLSsOMx75XPgce64RCMhLdUm6JjPv8DqI4NFpVIonK1HkJIQfoavUmNHyVebcBE+nSx8/0O+SvwA+avEygirccuftkZsYOk1mQtHc3OX24Dd4URs31QNbYwnfx11rnMGaANxmed0uoAG4E9BVG8W+sKGoBam2PGdxOj+xlwvWVpOBMkgJ+92jb3kI2tYp5k2drEG0Vn9kifHw98kqicARLIUrhkL4FHfAYFFOsQE5mVGYYCPtdusrxEUIX+LlgfKfTKuTmZjUMD4VbGFsF3G1JJxKXSULf9OAJfEIAFR5XP9s5p6KtBKJAFlYj5m2rnZuGFTm7sSPJBL85w9EcABQz0tf/6dCFFCxPJU8NtedmA0SYM6z+iBt82eVWu73saXgwXDaApjzyhunhNdrzBK8="
    bucket: "ffpyplayer-wheels"
    skip_cleanup: true
    region: us-east-1
    local_dir: upload
    upload-dir: ffpyplayer
    on:
      condition: "$UPLOAD_WHEELS"
      branch: "master"
